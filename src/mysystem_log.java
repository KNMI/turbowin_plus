package turbowin;


import java.awt.Cursor;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Martin
 */
public class mysystem_log extends javax.swing.JFrame {

   /**
    * Creates new form mysystem_log
    */
   public mysystem_log() {
      initComponents();
      initComponents2();
   }

   /**
    * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form
    * Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jScrollPane1 = new javax.swing.JScrollPane();
      jTextArea1 = new javax.swing.JTextArea();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      setTitle("TurboWin+ system log");

      jTextArea1.setEditable(false);
      jTextArea1.setColumns(20);
      jTextArea1.setRows(5);
      jScrollPane1.setViewportView(jTextArea1);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
            .addContainerGap())
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   
   

   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
   private void initComponents2()
   {
      final String newline = System.getProperty("line.separator");
      
      
      // eg http://www.javacreed.com/swing-worker-example/
      
      setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
      
      new SwingWorker<String, String>()
      {
         @Override
         protected String doInBackground() throws Exception
         {
            String file_line = null;
            int teller1 = 0;                                     // for counting total number of records in immt (first loop)
            int teller2 = -1;                                    // for counting numer of records in immt_list (second loop)
            boolean doorgaan = true;
            
            
            String file_naam = "turbowin_system_" + main.sdf_tsl_1.format(new Date()) + ".txt";     
            String volledig_path_turbowin_system_logs = main.logs_dir + java.io.File.separator + main.TURBOWIN_SYSTEM_LOGS_DIR + java.io.File.separator + file_naam;
  
            // extend title with full path of the system log txt file (can be used to point the observer to the file for eg forwarding to a Met Centre in case of a problems)
            setTitle("TurboWin+ system log [" + volledig_path_turbowin_system_logs + "]");
            
            try (BufferedReader in = new BufferedReader(new FileReader(volledig_path_turbowin_system_logs)))   // try with resources
            {
               while ((in.readLine()) != null)   
               {
                  teller1++;
               }
            } // try
            catch (FileNotFoundException ex)
            {
               JOptionPane.showMessageDialog(null, "Reading error 'TurboWin+ system log' file or no TurboWin+ events logged for the current month", main.APPLICATION_NAME + " error", JOptionPane.WARNING_MESSAGE);        
               doorgaan = false;
            }
            System.out.println("--- system log number of records: " + teller1);
            
            
            if (doorgaan)
            {
               // truck to display always the last 1000 records if > 1000 records stored in immt log
               if (teller1 > 5000)
               {
                  teller2 = (teller1 -5000) * -1;   // e.g. teller1 = 1700 -> teller2 = -700;
               }
               else
               {
                  teller2 = -1;
               }
               System.out.println("--- system log displaying from record number: " + Math.abs(teller2 + 1));
               
               try (BufferedReader in2 = new BufferedReader(new FileReader(volledig_path_turbowin_system_logs)))   // try with resources
               {
                  while ((file_line = in2.readLine()) != null)
                  {
                     teller2++;
                     if (teller2 >= 0)
                     {
                        publish(new String[] { file_line });
                     }
                  } // while ((file_line = in2.readLine()) != null)
               }
               catch (FileNotFoundException ex)
               {
                  JOptionPane.showMessageDialog(null, "Reading error 'TurboWin+ system log' file or no TurboWin+ events logged for the current month", main.APPLICATION_NAME + " error", JOptionPane.WARNING_MESSAGE);        
                  doorgaan = false;
               }
               
            } // if (doorgaan)
            
            return null;
         } // protected Void doInBackground() throws Exception
         
         @Override
         protected void process(List<String> data)
         {
            // process: Receives data chunks from the publish method asynchronously on the Event Dispatch Thread.
            for (String received_line: data)
            {
               // NB eg http://www.javacreed.com/swing-worker-example/
               //    This swing component is only accessed from the process() method and never used from within the doInBackbround() method 
               //    or other methods directly (by directly we mean from the same thread) invoked from it. The following image highlights the places 
               //    from where the swing component is accessed.
               
               
               // NB altijd in for loop omdat meerdere ontbvangen string's verzameld kunnen zijn voordat het hier procesed wordt(inherent aan SwingWorker)
               jTextArea1.append(received_line);
               jTextArea1.append(newline);
            }
         } // protected void process(List<String> data)
         
         @Override
         protected void done()
         {
            setCursor(Cursor.getPredefinedCursor(Cursor.	DEFAULT_CURSOR));
         } // protected void done()
      }.execute(); // new SwingWorker<Void, Void>()
      
   }

   
   
   
   
   
   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(mysystem_log.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>
      
        //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         @Override
         public void run() {
            new mysystem_log().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JTextArea jTextArea1;
   // End of variables declaration//GEN-END:variables

}
