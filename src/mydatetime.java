package turbowin;

import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
/*
 * mydatetime.java
 *
 * Created on 5 april 2007, 15:14
 */

/**
 *
 * @author  stam
 */
final public class mydatetime extends javax.swing.JFrame {
   
   /** Creates new form mydatetime */
   public mydatetime() {
      initComponents();
      initComponents2();
      initSynopparameters(); 
      setLocation(main.x_pos_frame, main.y_pos_frame);
   }
   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jScrollPane1 = new javax.swing.JScrollPane();
      jList1 = new javax.swing.JList<>();
      jScrollPane2 = new javax.swing.JScrollPane();
      jList2 = new javax.swing.JList<>();
      jScrollPane3 = new javax.swing.JScrollPane();
      jList3 = new javax.swing.JList<>();
      jScrollPane4 = new javax.swing.JScrollPane();
      jList4 = new javax.swing.JList<>();
      jButton1 = new javax.swing.JButton();
      jButton2 = new javax.swing.JButton();
      jButton3 = new javax.swing.JButton();
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      jLabel3 = new javax.swing.JLabel();
      jLabel4 = new javax.swing.JLabel();
      jSeparator1 = new javax.swing.JSeparator();
      jScrollPane5 = new javax.swing.JScrollPane();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      setTitle("Date and Time");
      setMinimumSize(new java.awt.Dimension(800, 600));
      setResizable(false);

      jList1.setModel(new javax.swing.AbstractListModel<String>() {
         String[] strings = { "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032" };
         public int getSize() { return strings.length; }
         public String getElementAt(int i) { return strings[i]; }
      });
      jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
      jList1.setPreferredSize(new java.awt.Dimension(40, 320));
      jScrollPane1.setViewportView(jList1);

      jList2.setModel(new javax.swing.AbstractListModel<String>() {
         String[] strings = { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };
         public int getSize() { return strings.length; }
         public String getElementAt(int i) { return strings[i]; }
      });
      jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
      jScrollPane2.setViewportView(jList2);

      jList3.setModel(new javax.swing.AbstractListModel<String>() {
         String[] strings = { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" };
         public int getSize() { return strings.length; }
         public String getElementAt(int i) { return strings[i]; }
      });
      jList3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
      jScrollPane3.setViewportView(jList3);

      jList4.setModel(new javax.swing.AbstractListModel<String>() {
         String[] strings = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" };
         public int getSize() { return strings.length; }
         public String getElementAt(int i) { return strings[i]; }
      });
      jList4.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
      jScrollPane4.setViewportView(jList4);

      jButton1.setText("OK");
      jButton1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            OK_button_actionPerformed(evt);
         }
      });

      jButton2.setText("Cancel");
      jButton2.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            Cancel_button_actionPerformed(evt);
         }
      });

      jButton3.setText("Internet");
      jButton3.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            Internet_button_actionPerformed(evt);
         }
      });

      jLabel1.setText("year [UTC]");

      jLabel2.setText("month [UTC]");

      jLabel3.setText("day [UTC]");

      jLabel4.setText("hour [UTC]");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE))
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                           .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                           .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(jLabel2))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(jLabel3))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(jLabel4)
                           .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                  .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(100, 100, 100)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel1)
               .addComponent(jLabel2)
               .addComponent(jLabel3)
               .addComponent(jLabel4))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
               .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jScrollPane4))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(15, 15, 15)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                  .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(15, 15, 15))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents



   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
   private void initComponents2()
   {
      if (main.offline_mode == true)
      {
         jButton3.setText("Help");
      }
      

      if (main.RS232_connection_mode == 3 || main.RS232_connection_mode == 9 || main.RS232_connection_mode == 10) // AWS connected mode  
      {
         jList1.setEnabled(false);
         jList2.setEnabled(false);
         jList3.setEnabled(false);
         jList4.setEnabled(false);
      }
      
      
      if (main.RS232_connection_mode == 3 || main.RS232_connection_mode == 9 || main.RS232_connection_mode == 10) // AWS connected mode
      {   
         jLabel1.setForeground(main.input_color_from_aws);        // year label
         jLabel2.setForeground(main.input_color_from_aws);        // month label
         jLabel3.setForeground(main.input_color_from_aws);        // day label
         jLabel4.setForeground(main.input_color_from_aws);        // hour label
      }
   }



   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
   private void Reset_All_DateTime_Vars()
   {
      // scope this module + myturbowin.java main module (all of type: static)
      year    = "";
      month   = "";
      day     = "";
      hour    = "";
      MM_code = "";                            // month of year (only for IMMT)
      YY_code = "";                            // day of the month
      GG_code = "";                            // hour of obs
   
      // scope only this module (no static)
      checks_ok                = false;

      /* update date/time fields on main screen */
      main.date_time_fields_update();
   }
    

   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
   private void Internet_button_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Internet_button_actionPerformed
// TODO add your handling code here:
      main.internet_mouseClicked(DATETIME_HELP_DIR);
   }//GEN-LAST:event_Internet_button_actionPerformed


   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
   private void Cancel_button_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_button_actionPerformed
// TODO add your handling code here:
      setVisible(false);
      dispose();
   }//GEN-LAST:event_Cancel_button_actionPerformed

   
   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
   private void OK_button_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OK_button_actionPerformed
      // TODO add your handling code here:
      int len;


      if (main.RS232_connection_mode != 3)                                         // not AWS connected mode
      {
         // initialisation 
         Reset_All_DateTime_Vars();
      
         // initialisation
         checks_ok = true;                                                            // was set to false in Reset_All_DateTime_Vars();
       
         // read selections from listboxes
         year  = (String)jList1.getSelectedValue();                                   // for progress main screen and IMMT and format 101
         month = (String)jList2.getSelectedValue();                                   // for progress main screen
         day   = (String)jList3.getSelectedValue();                                   // for progress main screen and format 101
         hour  = (String)jList4.getSelectedValue();                                   // for progress main screen and format 101
      
      
         //
         /////// checks
         //
         if (year == null)    
         {
            JOptionPane.showMessageDialog(null, "year not selected",  main.APPLICATION_NAME + " error", JOptionPane.WARNING_MESSAGE);
            Reset_All_DateTime_Vars();
         }
         else if (month == null)    
         {
            JOptionPane.showMessageDialog(null, "month not selected",  main.APPLICATION_NAME + " error", JOptionPane.WARNING_MESSAGE);
            Reset_All_DateTime_Vars();
         }
         else if (day == null)    
         {
            JOptionPane.showMessageDialog(null, "day not selected",  main.APPLICATION_NAME + " error", JOptionPane.WARNING_MESSAGE);
            Reset_All_DateTime_Vars();
         }
         else if (hour == null)    
         {
            JOptionPane.showMessageDialog(null, "hour not selected",  main.APPLICATION_NAME + " error", JOptionPane.WARNING_MESSAGE);
            Reset_All_DateTime_Vars();
         }
         else
         {
            checks_ok = true;
         }
         
         
         if (checks_ok == true)
         {
            // check max number of days in a particular month
            //
            int iYear  = Integer.parseInt(year);
            int iMonth = jList2.getSelectedIndex();  // 0-based
            int iDay   = 1;                          // only for determining max number of days in a particular month -> 1 is always ok for testing (filled in day e.g. 31 could be misleading!)

            // Create a calendar object and set year and month
            Calendar mycal = new GregorianCalendar(iYear, iMonth, iDay);

            // Get the number of days in that month
            int daysInMonth = mycal.getActualMaximum(Calendar.DAY_OF_MONTH); // 28 
            
            // test
            //System.out.println("daysInMonth = " + daysInMonth);
            
            if (daysInMonth < Integer.parseInt(day))   // daysInMonth = max possible in that month; day = as inserted by the user
            {
               JOptionPane.showMessageDialog(null, "combination month and day of month not valid",  main.APPLICATION_NAME + " error", JOptionPane.WARNING_MESSAGE);
               Reset_All_DateTime_Vars();
            } // if (daysInMonth < day)
         }
      
      
         if (checks_ok == true)
         {
            // NB String variable year can directly used in IMMT (So no conversion like the month var necessary)
            //           (and year is not used in obs to be send)

            // determine code figures for month (for IMMT storage and format 101)
            //
            int int_MM_code = jList2.getSelectedIndex() + 1;
            MM_code = Integer.toString(int_MM_code);

            len = 2;                                                               // MM_code always 2 characters width e.g. 03
            if (MM_code.length() < len)                                            // pad on left with zeros
            {   
               MM_code = "0000000000".substring(0, len - MM_code.length()) + MM_code;
            }

            // determine code figures for day of the month (for obs and IMMT)
            //
            YY_code = day;                                                         // day e.g. 1,2,11,23,29
      
            len = 2;                                                               // YY_code always 2 characters width e.g. 03
            if (YY_code.length() < len)                                            // pad on left with zeros
            {   
               YY_code = "0000000000".substring(0, len - YY_code.length()) + YY_code;
            }
      
            // determine code figures for hour of obs (for obs and IMMT)
            //
            GG_code = hour;                                                        // hour e.g. 1,2,11,23
      
            len = 2;                                                               // GG_code always 2 characters width e.g. 03
            if (GG_code.length() < len)                                            // pad on left with zeros
            {   
               GG_code = "0000000000".substring(0, len - GG_code.length()) + GG_code;
            }
         } // if (checks_ok == true)
      } // if (main.RS232_connection_mode != 3)
      else                                               // AWS connected mode
      {
         checks_ok = true;
      }
      
      
      if (checks_ok == true)
      {
         /* update date/time fields on (progress) main screen */
         main.date_time_fields_update();

         /* close this input page */
         setVisible(false);
         dispose();
          
      } // if (checks_ok == true)
      
   }//GEN-LAST:event_OK_button_actionPerformed



   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
   private void initSynopparameters()
   {
      // if appropriate put back earlier inserted values
      if (year.compareTo("") != 0)
         jList1.setSelectedValue(year, true);

      if (month.compareTo("") != 0)
         jList2.setSelectedValue(month, true);

      if (day.compareTo("") != 0)
         jList3.setSelectedValue(day, true);

      if (hour.compareTo("") != 0)
         jList4.setSelectedValue(hour, true);
      
/*      
      // NB in serial connection mose (AWS or barometer connected) after an obs was send all parameters will be set to blank, 
      //    the "date & time obs" will be automatically updated/shown again (in case AWS every minute and in case barometer every 5 minutes) 
      //    but in "no serial connection mode" we have to ask the observer again
      if ( (year.compareTo("") == 0) && (month.compareTo("") == 0) && (day.compareTo("") == 0) && (hour.compareTo("") == 0) &&
           (main.RS232_connection_mode == 0)  )                  // no serial connection
      {
         // ask the observer if this is the correct UTC date and time of the observation (and if yes set accordingly)
         main.check_and_set_datetime();
         
        if (year.compareTo("") != 0)
           jList1.setSelectedValue(year, true);

        if (month.compareTo("") != 0)
           jList2.setSelectedValue(month, true);

        if (day.compareTo("") != 0)
           jList3.setSelectedValue(day, true);

        if (hour.compareTo("") != 0)
           jList4.setSelectedValue(hour, true);
      }                     
*/      
   } // private void initSynopparameters()



   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
         public void run() {
            new mydatetime().setVisible(true);
         }
      });
   }
   
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton jButton1;
   private javax.swing.JButton jButton2;
   private javax.swing.JButton jButton3;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JList<String> jList1;
   private javax.swing.JList<String> jList2;
   private javax.swing.JList<String> jList3;
   private javax.swing.JList<String> jList4;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JScrollPane jScrollPane3;
   private javax.swing.JScrollPane jScrollPane4;
   private javax.swing.JScrollPane jScrollPane5;
   private javax.swing.JSeparator jSeparator1;
   // End of variables declaration//GEN-END:variables


   // constants
   private final String DATETIME_HELP_DIR  = "datetime.html";

   // scope this module + myturbowin.java main module (all of type: static)
   public static String year               = "";                           // always 4 char
   public static String month              = "";
   public static String day                = "";
   public static String hour               = "";
   public static String minute             = "00";                         // 00 default for manual obs but overwritten by AWS (SMD output data displayed on TurboWin+ main screen)
   public static String MM_code            = "";                           // month of year (always 2 char)
   public static String YY_code            = "";                           // day of the month (always 2 char)
   public static String GG_code            = "";                           // hour of obs       (always 2 char)
   
   // scope only this module
   boolean checks_ok                       = false;
}
