
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * myicing.java
 *
 * Created on 10-nov-2010, 10:40:18
 */

/**
 *
 * @author Martin
 */
public class myicing extends javax.swing.JFrame {

    /** Creates new form myicing */
    public myicing() {
        initComponents();
        initComponents2();
        initSynopparameters();
        setLocation(main.x_pos_frame, main.y_pos_frame);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      buttonGroup1 = new javax.swing.ButtonGroup();
      buttonGroup2 = new javax.swing.ButtonGroup();
      jButton1 = new javax.swing.JButton();
      jButton2 = new javax.swing.JButton();
      jButton3 = new javax.swing.JButton();
      jSeparator1 = new javax.swing.JSeparator();
      jTextField1 = new javax.swing.JTextField();
      jLabel1 = new javax.swing.JLabel();
      jPanel1 = new javax.swing.JPanel();
      jRadioButton1 = new javax.swing.JRadioButton();
      jRadioButton2 = new javax.swing.JRadioButton();
      jRadioButton3 = new javax.swing.JRadioButton();
      jRadioButton4 = new javax.swing.JRadioButton();
      jRadioButton5 = new javax.swing.JRadioButton();
      jRadioButton13 = new javax.swing.JRadioButton();
      jRadioButton14 = new javax.swing.JRadioButton();
      jRadioButton6 = new javax.swing.JRadioButton();
      jPanel2 = new javax.swing.JPanel();
      jRadioButton7 = new javax.swing.JRadioButton();
      jRadioButton8 = new javax.swing.JRadioButton();
      jRadioButton9 = new javax.swing.JRadioButton();
      jRadioButton10 = new javax.swing.JRadioButton();
      jRadioButton11 = new javax.swing.JRadioButton();
      jRadioButton12 = new javax.swing.JRadioButton();
      jLabel2 = new javax.swing.JLabel();
      jLabel3 = new javax.swing.JLabel();
      jLabel4 = new javax.swing.JLabel();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      setTitle("Ice accretion (icing)");

      jButton1.setText("OK");
      jButton1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            OK_button_actionPerformed(evt);
         }
      });

      jButton2.setText("Cancel");
      jButton2.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            Cancel_button_actionPerformed(evt);
         }
      });

      jButton3.setText("Internet");
      jButton3.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            Internet_button_actionPerformed(evt);
         }
      });

      jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
      jLabel1.setText("thickness of ice accretion (centimetres):");

      jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

      buttonGroup1.add(jRadioButton1);
      jRadioButton1.setText("icing from sea spray");

      buttonGroup1.add(jRadioButton2);
      jRadioButton2.setText("icing from fog");

      buttonGroup1.add(jRadioButton3);
      jRadioButton3.setText("icing from spray and fog");

      buttonGroup1.add(jRadioButton4);
      jRadioButton4.setText("icing from rain");

      buttonGroup1.add(jRadioButton5);
      jRadioButton5.setText("icing from spray and rain");

      buttonGroup1.add(jRadioButton13);
      jRadioButton13.setText("icing from fog and rain");

      buttonGroup1.add(jRadioButton14);
      jRadioButton14.setText("icing from spray and fog and rain");

      buttonGroup1.add(jRadioButton6);
      jRadioButton6.setText("not determined");

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jRadioButton1)
               .addComponent(jRadioButton2)
               .addComponent(jRadioButton3)
               .addComponent(jRadioButton4)
               .addComponent(jRadioButton5)
               .addComponent(jRadioButton6)
               .addComponent(jRadioButton13)
               .addComponent(jRadioButton14))
            .addContainerGap(29, Short.MAX_VALUE))
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jRadioButton1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton13)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton14)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton6)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

      buttonGroup2.add(jRadioButton7);
      jRadioButton7.setText("ice not building up");

      buttonGroup2.add(jRadioButton8);
      jRadioButton8.setText("ice building up slowly");

      buttonGroup2.add(jRadioButton9);
      jRadioButton9.setText("ice building up rapidly");

      buttonGroup2.add(jRadioButton10);
      jRadioButton10.setText("ice melting or breaking up slowly");

      buttonGroup2.add(jRadioButton11);
      jRadioButton11.setText("ice melting or breaking up rapidly");

      buttonGroup2.add(jRadioButton12);
      jRadioButton12.setText("not determined");

      javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
      jPanel2.setLayout(jPanel2Layout);
      jPanel2Layout.setHorizontalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jRadioButton7)
               .addComponent(jRadioButton8)
               .addComponent(jRadioButton9)
               .addComponent(jRadioButton10)
               .addComponent(jRadioButton11)
               .addComponent(jRadioButton12))
            .addContainerGap(35, Short.MAX_VALUE))
      );
      jPanel2Layout.setVerticalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jRadioButton7)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton8)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton9)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton10)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton11)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jRadioButton12)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      jLabel2.setText("cause of ice accretion");

      jLabel3.setText("rate of ice accretion");

      jLabel4.setText("[0 - 99]");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                           .addGroup(layout.createSequentialGroup()
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                 .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                 .addComponent(jLabel2))
                              .addGap(67, 67, 67)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                 .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                 .addComponent(jLabel3)))
                           .addGroup(layout.createSequentialGroup()
                              .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(jLabel4)
                              .addGap(152, 152, 152)))))
                  .addGap(0, 148, Short.MAX_VALUE))
               .addGroup(layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jSeparator1)))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(57, 57, 57)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel1)
               .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel4))
            .addGap(85, 85, 85)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel3)
               .addComponent(jLabel2))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(15, 15, 15)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(15, 15, 15))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents




   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
   private void initSynopparameters()
   {
      //  icing from               radio button     Is code FM13      (Is) code format 101 and AWS (bufr 020033 equivalent)
      //
      //  sea spray                1                1                 8
      //  fog                      2                2                 4
      //  spray and fog            3                3                 12
      //  rain                     4                4                 2
      //  spray and rain           5                5                 10
      //  fog and rain             13               n.a.              6
      //  spray and fog and rain   14               n.a.              14
      //    -- not determined---   6
      
      
      // NB if EUCAWS AWS linked (RS232_connection_mode = 3) or format 101 then more "cause of ice accretion" options available
      // 
      if ( (main.RS232_connection_mode == 3) || (main.obs_format.equals(main.FORMAT_101) == true) )
      {
         jRadioButton13.setVisible(true);        // icing from fog and rain (not in FM13)
         jRadioButton14.setVisible(true);        // icing from spray and fog and rain (not in FM13)   
      }
      else
      {
         jRadioButton13.setVisible(false);       // icing from fog and rain (not in FM13)
         jRadioButton14.setVisible(false);       // icing from spray and fog and rain (not in FM13)    
      }
      
      
      // put back earlier inserted values (if applicable)
      //

      // thickness
      //
      if (EsEs_code.compareTo("") != 0)
      {
         jTextField1.setText(EsEs_code);
      }


      // Is (cause ice accretion)
      //
/*      
      if ( (main.RS232_connection_mode == 3) || (main.obs_format.equals(main.FORMAT_101) == true) ) // EUCAWS AWS linked (RS232_connection_mode = 3)
      {
         if (Is_code.equals("8"))                  // icing from spray (bufr table 020033-equivalent)
         {
            jRadioButton1.setSelected(true);
         }
         else if (Is_code.equals("4"))             // icing from fog (bufr table 020033-equivalent)
         {
            jRadioButton2.setSelected(true);
         }
         else if (Is_code.equals("12"))            // icing from spray and fog (bufr table 020033-equivalent) 
         {
            jRadioButton3.setSelected(true);
         }
         else if (Is_code.equals("2"))             // icing from rain (bufr table 020033-equivalent) 
         {
            jRadioButton4.setSelected(true);
         }
         else if (Is_code.equals("10"))            // icing from spray and rain (bufr table 020033-equivalent) 
         {
            jRadioButton5.setSelected(true);
         }
         else if (Is_code.equals("6"))             // icing from fog and rain (bufr table 020033-equivalent; not present in FM13 code)
         {
            jRadioButton13.setSelected(true);
         }
          else if (Is_code.equals("14"))           // icing from spray and fog and rain (bufr table 020033-equivalent; not present in FM13 code)
         {
            jRadioButton14.setSelected(true);
         }
         else
         {
            jRadioButton6.setSelected(true);       // not determined
         }
      }   
      else // not AWS connected and not format_101
      {
         if (Is_code.equals("1"))                  // icing from sea spray (FM13 code)
         {
            jRadioButton1.setSelected(true);
         }
         else if (Is_code.equals("2"))             // icing from fog (FM13 code)
         {
            jRadioButton2.setSelected(true);
         }
         else if (Is_code.equals("3"))             // icing from spray and fog (FM13 code)
         {
            jRadioButton3.setSelected(true);
         }
         else if (Is_code.equals("4"))             // icing from rain (FM13 code)
         {
            jRadioButton4.setSelected(true);
         }
         else if (Is_code.equals("5"))             // icing from spray and rain (FM13 code)
         {
            jRadioButton5.setSelected(true);
         }
         else
         {
            jRadioButton6.setSelected(true);       // not determined
         }
      } // else (not AWS connected and not format_101)
*/
      if (Is_code.equals("1"))                  // icing from sea spray (FM13 code)
      {
         jRadioButton1.setSelected(true);
      }
      else if (Is_code.equals("2"))             // icing from fog (FM13 code)
      {
         jRadioButton2.setSelected(true);
      }
      else if (Is_code.equals("3"))             // icing from spray and fog (FM13 code)
      {
         jRadioButton3.setSelected(true);
      }
      else if (Is_code.equals("4"))             // icing from rain (FM13 code)
      {
         jRadioButton4.setSelected(true);
      }
      else if (Is_code.equals("5"))             // icing from spray and rain (FM13 code)
      {
         jRadioButton5.setSelected(true);
      }
      else if (Is_code.equals("6"))             // icing from fog and rain (AWS and format 101 only)
      {
         jRadioButton13.setSelected(true);
      }
      else if (Is_code.equals("14"))            // icing from spray and fog and rain (AWS and format 101 only)  
      {
         jRadioButton14.setSelected(true);
      }
      else
      {
         jRadioButton6.setSelected(true);       // not determined
      }
      
      
      // Rs (rate ice accretion)
      //
      if (Rs_code.equals("0"))
      {
         jRadioButton7.setSelected(true);
      }
      else if (Rs_code.equals("1"))
      {
         jRadioButton8.setSelected(true);
      }
      else if (Rs_code.equals("2"))
      {
         jRadioButton9.setSelected(true);
      }
      else if (Rs_code.equals("3"))
      {
         jRadioButton10.setSelected(true);
      }
      else if (Rs_code.equals("4"))
      {
         jRadioButton11.setSelected(true);
      }
      else
      {
         jRadioButton12.setSelected(true);       // not determined
      }

   } // private void initSynopparameters()



   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
   private void initComponents2()
   {
       if (main.offline_mode == true)
      {
         jButton3.setText("Help");
      }
   } // private void initComponents2()



   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
   private void Reset_All_Icing_Vars()
   {
      Is_code               = "";
      EsEs_code             = "";
      Rs_code               = "";
      
      checks_ok             = false;
   } // private void Reset_All_Icing_Vars()



   
   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
    private void OK_button_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OK_button_actionPerformed
       // TODO add your handling code here:

       // initialisation
       Reset_All_Icing_Vars();

       // ice accration thickness
       //
       thickness = jTextField1.getText().trim();

       //JOptionPane.showMessageDialog(null, thickness,  main.APPLICATION_NAME + " TEST", JOptionPane.WARNING_MESSAGE);

       // cause icing (Is)
       //
/*       
       if ( (main.RS232_connection_mode == 3) || (main.obs_format.equals(main.FORMAT_101) == true) ) // EUCAWS AWS linked (RS232_connection_mode = 3)
       {
          if (jRadioButton1.isSelected() == true)        // icing from sea spray
          {
             Is_code = "8";
          }   
          else if (jRadioButton2.isSelected() == true)   // icing from fog
          {   
             Is_code = "4";
          }   
          else if (jRadioButton3.isSelected() == true)   // icing from spray and fog
          {
             Is_code = "12";
          }
          else if (jRadioButton4.isSelected() == true)   // icing from rain
          {   
             Is_code = "2";
          }   
          else if (jRadioButton5.isSelected() == true)   // icing from spray and rain
          {   
             Is_code = "10";
          }
          else if (jRadioButton13.isSelected() == true)  // icing from fog and rain (AWS and format 101 only)
          {
             Is_code = "6";
          }
          else if (jRadioButton14.isSelected() == true)  // icing from spray and fog and rain (AWS and format 101 only)
          {   
             Is_code = "14";
          }
          else if (jRadioButton6.isSelected() == true)  // not determined
          {
             Is_code = "";                              // NB hier nog geen "/" zetten
          }   
          else
          {
             Is_code = "";
          }           
       }
       else // no AWS and not format 101
       {
          if (jRadioButton1.isSelected() == true)        // icing from sea spray
          {
             Is_code = "1";
          }   
          else if (jRadioButton2.isSelected() == true)   // icing from fog
          {   
             Is_code = "2";
          }   
          else if (jRadioButton3.isSelected() == true)   // icing from spray and 
          {
             Is_code = "3";
          }
          else if (jRadioButton4.isSelected() == true)   // icing from rain
          {   
             Is_code = "4";
          }   
          else if (jRadioButton5.isSelected() == true)   // icing from spray and rain
          {   
             Is_code = "5";
          }
          else if (jRadioButton6.isSelected() == true)  // not determined
          {
             Is_code = "";                              // NB hier nog geen "/" zetten
          }   
          else
          {
             Is_code = "";
          }  
       } // else (no AWS and not format 101)
*/
       if (jRadioButton1.isSelected() == true)        // icing from sea spray
       {
          Is_code = "1";
       }   
       else if (jRadioButton2.isSelected() == true)   // icing from fog
       {   
          Is_code = "2";
       }   
       else if (jRadioButton3.isSelected() == true)   // icing from spray and fog
       {
          Is_code = "3";
       }
       else if (jRadioButton4.isSelected() == true)   // icing from rain
       {   
          Is_code = "4";
       }   
       else if (jRadioButton5.isSelected() == true)   // icing from spray and rain
       {   
          Is_code = "5";
       }
       else if (jRadioButton13.isSelected() == true)  // icing from fog and rain (AWS and format 101 only)
       {
          Is_code = "6";
       }
       else if (jRadioButton14.isSelected() == true)  // icing from spray and fog and rain (AWS and format 101 only)
       {   
          Is_code = "14";
       }
       else if (jRadioButton6.isSelected() == true)  // not determined
       {
          Is_code = "";                              // NB hier nog geen "/" zetten
       }   
       else
       {
          Is_code = "";
       }                  

       // rate icing
       //
       if (jRadioButton7.isSelected() == true)
       {   
          Rs_code = "0";
       }   
       else if (jRadioButton8.isSelected() == true)
       {  
          Rs_code = "1";
       }   
       else if (jRadioButton9.isSelected() == true)
       {   
          Rs_code = "2";
       }   
       else if (jRadioButton10.isSelected() == true)
       {   
          Rs_code = "3";
       }   
       else if (jRadioButton11.isSelected() == true)
       {   
          Rs_code = "4";
       }  
       else if (jRadioButton12.isSelected() == true)   // not determined
       {   
          Rs_code = "";                                // NB hier nog geen "/" zetten
       }   
       else
       {
          Rs_code = "";
       }
       

       /*
       //////////////// checks
       */

       // om thickness na bijvoorbeeld 12 ingevuld te hebben weer blanco gemaakt te hebben en ook Rs en Is waren not dtermined
       // dan toch OK kunnen geven
       if (thickness.trim().equals("") && Is_code.trim().equals("") && Rs_code.trim().equals(""))
       {
          checks_ok = true;
          EsEs_code = "";
       }
       else
       {
          // String thickness convert to integer thickness
          try
          {
             int_thickness = Integer.parseInt(thickness.trim());
          }
          catch (NumberFormatException e){/* ... */}


          // thickness check error messages
          if (int_thickness < 0 || int_thickness > 99 || thickness.length() > 2)
          {
             JOptionPane.showMessageDialog(null, "ice thickness must be in range 0 - 99 (or blank, but blank only if cause of ice accretion and rate of ice accreation are not determined)",  main.APPLICATION_NAME + " error", JOptionPane.WARNING_MESSAGE);
             Reset_All_Icing_Vars();
          }
          else
          {
             checks_ok = true;
          } // else


          // determine code figures (thickness)
          if (checks_ok)
          {
             int len = 2;                                                           // always 2 chars
             if (thickness.length() < len)                                          // pad on left with zeros
             {
                EsEs_code = "0000000000".substring(0, len - thickness.length()) + thickness;
             }
             else
             {
                EsEs_code = thickness;
             }
          } // if (checks_ok)

          /* NB determine code figures (Is) */
          // already done see above

          /* NB determine code figures (Rs) */
          // already done see above


           //JOptionPane.showMessageDialog(null, EsEs_code,  main.APPLICATION_NAME + " TEST", JOptionPane.WARNING_MESSAGE);
       }


       if (checks_ok == true)
       {
          /* update icing fields on main screen */
          main.icing_fields_update();

          /* close this input page */
          setVisible(false);
          dispose();
       }
    }//GEN-LAST:event_OK_button_actionPerformed



   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
    private void Cancel_button_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_button_actionPerformed
       // TODO add your handling code here:
      setVisible(false);
      dispose();
  
    }//GEN-LAST:event_Cancel_button_actionPerformed



   /***********************************************************************************************/
   /*                                                                                             */
   /*                                                                                             */
   /*                                                                                             */
   /***********************************************************************************************/
    private void Internet_button_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Internet_button_actionPerformed
       // TODO add your handling code here:
       main.internet_mouseClicked(ICING_HELP_DIR);
    }//GEN-LAST:event_Internet_button_actionPerformed



    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
         @Override
            public void run() {
                new myicing().setVisible(true);
            }
        });
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.ButtonGroup buttonGroup1;
   private javax.swing.ButtonGroup buttonGroup2;
   private javax.swing.JButton jButton1;
   private javax.swing.JButton jButton2;
   private javax.swing.JButton jButton3;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JRadioButton jRadioButton1;
   private javax.swing.JRadioButton jRadioButton10;
   private javax.swing.JRadioButton jRadioButton11;
   private javax.swing.JRadioButton jRadioButton12;
   private javax.swing.JRadioButton jRadioButton13;
   private javax.swing.JRadioButton jRadioButton14;
   private javax.swing.JRadioButton jRadioButton2;
   private javax.swing.JRadioButton jRadioButton3;
   private javax.swing.JRadioButton jRadioButton4;
   private javax.swing.JRadioButton jRadioButton5;
   private javax.swing.JRadioButton jRadioButton6;
   private javax.swing.JRadioButton jRadioButton7;
   private javax.swing.JRadioButton jRadioButton8;
   private javax.swing.JRadioButton jRadioButton9;
   private javax.swing.JSeparator jSeparator1;
   private javax.swing.JTextField jTextField1;
   // End of variables declaration//GEN-END:variables


   // constants
   private final String ICING_HELP_DIR        = "icing.html";

   // private vars
   private int int_thickness                  = main.INVALID;
   private String thickness                   = "";
   private boolean checks_ok                  = false;
   
   // global var's
   public static String Is_code               = "";            // 1 char
   public static String EsEs_code             = "";            // 2 char
   public static String Rs_code               = "";            // 1 char
}
